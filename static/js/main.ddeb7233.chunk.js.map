{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","selectedTab","some","tab","id","selectedTabContent","find","content","className","map","title","classNames","href","onClick","onSelectTab","App","useState","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNAWaA,EAAwB,SAAC,GAI/B,IAAD,EAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KAC5CA,EACAD,EAAK,GAAGM,GAONC,EAAkB,UAAGP,EACxBQ,MAAK,SAAAH,GAAG,OAAIJ,IAAkBI,EAAIC,aADb,aAAG,EACeG,QAE1C,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKC,UAAU,gBAAf,SACE,6BACGV,EAAKW,KAAI,SAAAN,GACR,IAAQC,EAAcD,EAAdC,GAAIM,EAAUP,EAAVO,MAEZ,OACE,oBACEF,UAAWG,IAAW,CACpB,YAAaV,IAAgBG,IAE/B,UAAQ,MAJV,SAME,mBACEQ,KAAI,WAAMT,EAAIC,IACd,UAAQ,UACRS,QAAS,kBA1BQ,SAACT,EAAID,GAChCJ,IAAkBK,GACpBJ,EAAcG,GAwBaW,CAAYV,EAAID,IAHjC,SAKGO,aAQb,qBAAKF,UAAU,QAAQ,UAAQ,aAA/B,SACGH,QChDIP,EAAc,CACzB,CAAEM,GAAI,QAASM,MAAO,QAASH,QAAS,eACxC,CAAEH,GAAI,QAASM,MAAO,QAASH,QAAS,eACxC,CAAEH,GAAI,QAASM,MAAO,QAASH,QAAS,gBAG7BQ,EAAgB,WAC3B,MAAsCC,mBAASlB,EAAK,IAApD,mBAAOG,EAAP,KAAoBgB,EAApB,KAEA,OACE,sBAAKT,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBP,EAAYS,SAGlC,cAAC,EAAD,CACEZ,KAAMA,EACNC,cAAeE,EAAYG,GAC3BJ,cAAeiB,QCvBvBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ddeb7233.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Tab } from '../../react-app-env';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\ntype OnSelectTab = (id: string, tab: Tab) => void | undefined;\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.some(tab => tab.id === selectedTabId)\n    ? selectedTabId\n    : tabs[0].id;\n  const onSelectTab: OnSelectTab = (id, tab) => {\n    if (selectedTabId !== id) {\n      onTabSelected(tab);\n    }\n  };\n\n  const selectedTabContent = tabs\n    .find(tab => selectedTabId === tab.id)?.content;\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                className={classNames({\n                  'is-active': selectedTab === id,\n                })}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => onSelectTab(id, tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTabContent}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './react-app-env';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}